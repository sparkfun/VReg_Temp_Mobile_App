<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
		xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
		xmlns:toolkit="clr-namespace:Xamarin.FormsBook.Toolkit;assembly=Xamarin.FormsBook.Toolkit"
		xmlns:renderers="clr-namespace:VoltageRegulatorTemperature.Renderers;assembly=VoltageRegulatorTemperature"
		x:Class="VoltageRegulatorTemperature.Views.SettingsPage" Title="Settings" Icon="hamburger.png" Padding="10"
		x:Name="settingsPage"
		BindingContext="{Binding Source={x:Static Application.Current}, Path=CalculatorViewModel}">
	<ContentPage.Padding>
		<OnPlatform x:TypeArguments="Thickness" iOS="0, 20, 0, 0" />
	</ContentPage.Padding>
	<ContentPage.Resources>
		<ResourceDictionary>
			<Style TargetType="Entry">
				<Style.Triggers>
					<Trigger TargetType="Entry" Property="IsFocused" Value="True">
						<Setter Property="BackgroundColor" Value="#e6ffff" />
					</Trigger>
				</Style.Triggers>
			</Style>
		</ResourceDictionary>
	</ContentPage.Resources>
	<ContentPage.Content>
		<ScrollView>
			<StackLayout VerticalOptions="FillAndExpand" Padding="10">
				<Label Text="Thermal Resistance (˚C/W)" />
				<!-- <Entry Text="{Binding ThermalResistance, StringFormat='{0:F2}'}"
						x:Name="resistanceEntry"
						Keyboard="Numeric" /> -->
				<renderers:DoneEntry Text="{Binding ThermalResistance}" x:Name="resistanceEntry" Keyboard="Numeric">
					<Entry.Behaviors>
						<toolkit:NumericValidationBehavior />
					</Entry.Behaviors>
				</renderers:DoneEntry>
				<Label Text="Temperature Units" />
				<Grid>
					<Grid.Resources>
						<ResourceDictionary>
							<Style TargetType="Label">
								<Setter Property="FontSize" Value="Medium" />
								<Setter Property="HorizontalTextAlignment" Value="Center" />
							</Style>
						</ResourceDictionary>
					</Grid.Resources>
					<Label Text="Fahrenheit (°F)" TextColor="Gray" Grid.Column="0">
						<Label.Behaviors>
							<toolkit:RadioBehavior x:Name="fahrenheitRadio" />
						</Label.Behaviors>
						<Label.Triggers>
							<DataTrigger TargetType="Label" Value="True"
									Binding="{Binding Source={x:Reference fahrenheitRadio}, Path=IsChecked}">
								<Setter Property="TextColor" Value="Green" />
							</DataTrigger>
						</Label.Triggers>
					</Label>
					<Label Text="Celsius (°C)" TextColor="Gray" Grid.Column="1">
						<Label.Behaviors>
							<toolkit:RadioBehavior x:Name="celsiusRadio" IsChecked="True" />
						</Label.Behaviors>
						<Label.Triggers>
							<DataTrigger TargetType="Label"  Value="True"
									Binding="{Binding Source={x:Reference celsiusRadio}, Path=IsChecked}">
								<Setter Property="TextColor" Value="Green" />
							</DataTrigger>
						</Label.Triggers>
					</Label>
				</Grid>
				<Label Text="Ambient Temperature (˚C)">
					<Label.Triggers>
						<DataTrigger TargetType="Label" Value="True"
								Binding="{Binding Source={x:Reference  fahrenheitRadio}, Path=IsChecked}">
							<Setter Property="Text" Value="Ambient Temperature (˚F)" />
							<!-- Add call to show units in ˚F -->
						</DataTrigger>
					</Label.Triggers>
				</Label>
				<renderers:DoneEntry Text="{Binding AmbientTemp}" x:Name="ambientTempEntry" Keyboard="Numeric">
					<Entry.Behaviors>
						<toolkit:NumericValidationBehavior />
					</Entry.Behaviors>
				</renderers:DoneEntry>
				<Label Text="Max Junction Temperature (˚C)">
					<Label.Triggers>
						<DataTrigger TargetType="Label" Value="True"
								Binding="{Binding Source={x:Reference  fahrenheitRadio}, Path=IsChecked}">
							<Setter Property="Text" Value="Max Junction Temperature (˚F)" />
							<!-- Add call to show units in ˚F -->
						</DataTrigger>
					</Label.Triggers>
				</Label>
				<!-- TODO: Need to change units -->
				<renderers:DoneEntry Text="{Binding MaxJunctionTemp}" x:Name="maxJunctionTempEntry" Keyboard="Numeric">
					<Entry.Behaviors>
						<toolkit:NumericValidationBehavior />
					</Entry.Behaviors>
				</renderers:DoneEntry>
				<!-- Slider configuration settings -->
				<Label Text="Slider limit settings" FontSize="Small" FontAttributes="Bold" />
				<BoxView Color="Black" HeightRequest="2" />
				<Label Text="Minumum Voltage In" />
				<renderers:DoneEntry Text="{Binding MinVoltageIn}" x:Name="minVoltageInEntry" Keyboard="Numeric">
					<Entry.Behaviors>
						<toolkit:NumericValidationBehavior />
					</Entry.Behaviors>
				</renderers:DoneEntry>
				<Label Text="Maximum Voltage In" />
				<renderers:DoneEntry Text="{Binding MaxVoltageIn}" x:Name="maxVoltageInEntry" Keyboard="Numeric">
					<Entry.Behaviors>
						<toolkit:NumericValidationBehavior />
					</Entry.Behaviors>
				</renderers:DoneEntry>
				<Label Text="Minumum Voltage Out" />
				<renderers:DoneEntry Text="{Binding MinVoltageOut}" x:Name="minVoltageOutEntry" Keyboard="Numeric">
					<Entry.Behaviors>
						<toolkit:NumericValidationBehavior />
					</Entry.Behaviors>
				</renderers:DoneEntry>
				<!-- TODO: This doesn't seem to be getting set! -->
				<Label Text="Maximum Voltage Out" />
				<renderers:DoneEntry Text="{Binding MaxVoltageOut}" x:Name="maxVoltageOutEntry" Keyboard="Numeric">
					<Entry.Behaviors>
						<toolkit:NumericValidationBehavior />
					</Entry.Behaviors>
				</renderers:DoneEntry>
				<Label Text="Minimum Current (A)" />
				<renderers:DoneEntry Text="{Binding MinCurrentDraw}" x:Name="minCurrentEntry" Keyboard="Numeric">
					<Entry.Behaviors>
						<toolkit:NumericValidationBehavior />
					</Entry.Behaviors>
				</renderers:DoneEntry>
				<Label Text="Maximum Current (A)" />
				<renderers:DoneEntry Text="{Binding MaxCurrentDraw}" x:Name="maxCurrentEntry" Keyboard="Numeric">
					<Entry.Behaviors>
						<toolkit:NumericValidationBehavior />
					</Entry.Behaviors>
				</renderers:DoneEntry>
				<Button Text="Reset Settings" Command="{Binding ResetToDefaultSettingsCommand}" />
			</StackLayout>
		</ScrollView>
	</ContentPage.Content>
</ContentPage>